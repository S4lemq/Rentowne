<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>pl.rentowne</groupId>
	<artifactId>rentowne</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>rentowne</name>
	<description>
		Rentowne is a modern application built with Spring Boot, designed for efficient apartment rental management.
		Thanks to its intuitive interface and advanced features, users can easily track property availability, rental agreements,
		and receive notifications about upcoming payment deadlines. Rentowne is the perfect tool for property owners, real estate agencies,
		and private landlords.
	</description>
	<properties>
		<java.version>21</java.version>
		<springdoc.version>2.1.0</springdoc.version>
		<queryDslVersion>5.0.0</queryDslVersion>
		<jjwt.version>0.11.5</jjwt.version>
		<totp.version>1.7.1</totp.version>
		<guava.version>32.1.3-jre</guava.version>
		<apacheCommons.version>2.15.1</apacheCommons.version>
		<slugify.version>3.0.6</slugify.version>
	</properties>
	<dependencies>
		<!-- Spring Data JPA for database interaction -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- Spring Security for authentication and authorization -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<!-- Spring Web for building web applications -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- Liquibase for database schema migration -->
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
		<!-- PostgreSQL JDBC Driver -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- Lombok for boilerplate code reduction -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- Spring Boot Test for unit testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Spring Security Test for security tests -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- JSON Web Token support -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>${jjwt.version}</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>${jjwt.version}</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>${jjwt.version}</version>
		</dependency>
		<!-- Time-based One-time Password library -->
		<dependency>
			<groupId>dev.samstevens.totp</groupId>
			<artifactId>totp</artifactId>
			<version>${totp.version}</version>
		</dependency>
		<!-- SpringDoc for OpenAPI 3 documentation -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>${springdoc.version}</version>
		</dependency>
		<!-- Spring Boot Starter Validation for validation support -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<!-- Google Guava library for utilities and collection handling -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
		<!-- QueryDSL JPA for type-safe JPA queries -->
		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-jpa</artifactId>
			<version>${queryDslVersion}</version>
			<classifier>jakarta</classifier>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!--Commons functions from Apache-->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${apacheCommons.version}</version>
		</dependency>
		<!--generate SEO-friendly URLs-->
		<dependency>
			<groupId>com.github.slugify</groupId>
			<artifactId>slugify</artifactId>
			<version>${slugify.version}</version>
		</dependency>
		<!--mail sender-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<!--simple encoder and decoders for various formats such as Base64 and Hexadecimal.-->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.16.0</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.4.0</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>your-source-directory</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
				<version>3.3.3</version>
				<executions>
					<execution>
						<id>process</id>
						<goals>
							<goal>process</goal>
						</goals>
						<phase>generate-sources</phase>
						<configuration>
							<processors>
								<processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
							</processors>
							<options>
								<querydsl.entityAccessors>true</querydsl.entityAccessors>
							</options>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.querydsl</groupId>
						<artifactId>querydsl-apt</artifactId>
						<version>${queryDslVersion}</version>
						<classifier>jakarta</classifier>
					</dependency>
					<dependency>
						<groupId>jakarta.annotation</groupId>
						<artifactId>jakarta.annotation-api</artifactId>
						<version>2.1.1</version>
					</dependency>
					<dependency>
						<groupId>jakarta.persistence</groupId>
						<artifactId>jakarta.persistence-api</artifactId>
						<version>3.1.0</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>
</project>
